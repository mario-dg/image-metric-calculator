# Ultralytics Template ðŸš€, AGPL-3.0 license

# Overview:
# This pyproject.toml file manages the build, packaging, and distribution of the Ultralytics Template library.
# It defines essential project metadata, dependencies, and settings used to develop and deploy the library.

# Key Sections:
# - [build-system]: Specifies the build requirements and backend (e.g., setuptools, wheel).
# - [project]: Includes details like name, version, description, authors, dependencies and more.
# - [project.optional-dependencies]: Provides additional, optional packages for extended features.
# - [tool.*]: Configures settings for various tools (pytest, yapf, etc.) used in the project.

# Installation:
# The Template library can be installed using the command: 'pip install git+https://TOKEN:x-oauth-basic@github.com/ultralytics/template.git@main'
# For development purposes, you can install the package in editable mode with: 'pip install -e .'
# This approach allows for real-time code modifications without the need for re-installation.

# Documentation:
# For comprehensive documentation and usage instructions, visit: https://docs.ultralytics.com

[build-system]
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"

# Project settings -----------------------------------------------------------------------------------------------------
[project]
name = "Image Metric Calculator"  # Required
dynamic = ["version"]
description = "Simple Streamlit UI that allows for a set of generated and ground truth images to be used for qualitative metric calculation (FID, IS, SSIM)"  # Optional
readme = "README.md"  # Optional
requires-python = ">=3.9"
license = { file = "LICENSE" }
keywords = ["mario-dg", "Research"]  # Optional
authors = [
    { name = "Mario da Graca", email = "mario.dagraca@gmx.de" } # Optional
]
maintainers = [
    { name = "Mario da Graca", email = "mario.dagraca@gmx.de" } # Optional
]
classifiers = [# Optional, for a list of valid classifiers, see https://pypi.org/classifiers/
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

# Required dependencies ------------------------------------------------------------------------------------------------
dependencies = [
]

# Optional dependencies ------------------------------------------------------------------------------------------------
[project.optional-dependencies] # Optional
tests = ["pytest"]

# Tools settings -------------------------------------------------------------------------------------------------------
[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.9,<3.9.7 || >3.9.7,<4.0"
numpy = "^1.26.4"
pillow = "^10.2.0"
scikit-image = "^0.22.0"
scipy = "^1.12.0"
torch = "^2.2.1"
torchvision = "^0.17.1"
streamlit = "^1.32.1"
torchmetrics = "^1.3.1"
torch-fidelity = "^0.3.0"

[tool.setuptools]  # configuration specific to the `setuptools` build backend.
packages = { find = { where = ["."], include = ["template", "template.*"] } }
package-data = { "sample" = ["*.yaml"] }

[tool.setuptools.dynamic]
version = { attr = "template.__version__" }

[tool.ruff]
line-length = 120

[tool.docformatter]
wrap-summaries = 120
wrap-descriptions = 120
in-place = true
pre-summary-newline = true
close-quotes-on-newline = true

[tool.codespell]
ignore-words-list = "crate,nd,strack,dota,ane,segway,fo,gool,winn,commend"
skip = '*.csv,*venv*,docs/??/,docs/mkdocs_??.yml'
